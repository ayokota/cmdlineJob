<?xml version='1.0'?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cassandra="http://www.springframework.org/schema/data/cassandra"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/data/cassandra http://www.springframework.org/schema/data/cassandra/spring-cassandra-1.0.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <context:component-scan base-package="com.shc.scinventory"/>
    <bean id="applicationProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:cassandra.properties</value>
            </list>
        </property>
    </bean>

    <bean id="cassandraAuthProvider" class="com.datastax.driver.auth.DseAuthProvider"/>
    <bean id="dcAwareRoundRobinPolicy" class="com.datastax.driver.core.policies.DCAwareRoundRobinPolicy">
        <constructor-arg value="${cassandra.datacenter}"/>
        <constructor-arg value="${cassandra.hostsperremotedc}"/>
        <constructor-arg value="${cassandra.allowremotedcslocal}"/>
    </bean>
    <bean id="loadBalancingPolicy" class="com.datastax.driver.core.policies.TokenAwarePolicy">
        <constructor-arg ref="dcAwareRoundRobinPolicy"/>
    </bean>

    <!-- REQUIRED: The Cassandra Cluster -->
    <cassandra:cluster contact-points="${cassandra.Newcontactpoints}"
                       port="${cassandra.Newport}" username="${cassandra.username}" password="${cassandra.password}"
                       auth-info-provider-ref="cassandraAuthProvider" load-balancing-policy-ref="loadBalancingPolicy"/>

    <!-- REQUIRED: The Cassandra Session, built from the Cluster, and attaching
     to a keyspace -->
    <cassandra:session keyspace-name="${cassandra.Newkeyspace}"/>

    <!-- REQUIRED: The Default Cassandra Mapping Context used by CassandraConverter -->
    <cassandra:mapping/>

    <!-- REQUIRED: The Default Cassandra Converter used by CassandraTemplate -->
    <cassandra:converter/>

    <!-- REQUIRED: The Cassandra Template is the building block of all Spring
     Data Cassandra -->
    <cassandra:template id="cassandraNewTemplate"/>


</beans>